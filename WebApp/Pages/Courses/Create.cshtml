@page
@model WebApp.Pages.Courses.CreateModel
@{
    ViewData["Title"] = "Create Course";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h3 class="mb-0">Create New Course</h3>
                </div>
                <div class="card-body">
                    <form id="createCourseForm">
                        <div class="mb-3">
                            <label for="courseName" class="form-label">Course Name</label>
                            <input type="text" class="form-control" id="courseName" name="courseName" required maxlength="255">
                        </div>

                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" id="description" name="description" rows="3"></textarea>
                        </div>

                        <div class="mb-3">
                            <label for="category" class="form-label">Category</label>
                            <input type="text" class="form-control" id="category" name="category">
                        </div>

                        <div class="mb-3">
                            <label for="difficulty" class="form-label">Difficulty</label>
                            <select class="form-select" id="difficulty" name="difficulty">
                                <option value="">Select Difficulty</option>
                                <option value="Beginner">Beginner</option>
                                <option value="Intermediate">Intermediate</option>
                                <option value="Advanced">Advanced</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="syllabus" class="form-label">Syllabus</label>
                            <textarea class="form-control" id="syllabus" name="syllabus" rows="4"></textarea>
                        </div>

                        <div class="mb-3">
                            <label for="prerequisites" class="form-label">Prerequisites</label>
                            <textarea class="form-control" id="prerequisites" name="prerequisites" rows="2"></textarea>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a href="/Courses" class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Back to List
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Create Course
                            </button>
                        </div>
                    </form>
                </div>
            </div>
            <div id="alert" class="alert mt-3" style="display: none;"></div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const apiBaseUrl = '@Configuration["ApiSettings:BaseUrl"]';
        
        document.getElementById('createCourseForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const courseData = {
                courseName: document.getElementById('courseName').value,
                description: document.getElementById('description').value,
                category: document.getElementById('category').value,
                difficulty: document.getElementById('difficulty').value,
                syllabus: document.getElementById('syllabus').value,
                prerequisites: document.getElementById('prerequisites').value
            };

            try {
                const response = await fetch(`${apiBaseUrl}/api/Course`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(courseData)
                });

                if (!response.ok) {
                    const errorData = await response.json();
                    throw new Error(errorData.message || 'Failed to create course');
                }

                showAlert('Course created successfully!', 'success');
                setTimeout(() => {
                    window.location.href = '/Courses';
                }, 1500);
            } catch (error) {
                console.error('Error:', error);
                showAlert(error.message || 'Failed to create course', 'danger');
            }
        });

        function showAlert(message, type) {
            const alert = document.getElementById('alert');
            alert.className = `alert alert-${type} mt-3`;
            alert.textContent = message;
            alert.style.display = 'block';
        }
    </script>
} 