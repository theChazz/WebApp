@page "{id:int}"
@model WebApp.Pages.Rubrics.DetailsModel
@{
    ViewData["Title"] = "Rubric Details";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Rubric Details</h2>
        <div>
            <a href="/Rubrics/Edit/@Model.Id" class="btn btn-primary">Edit</a>
            <a href="/Rubrics/Index" class="btn btn-secondary">Back</a>
        </div>
    </div>
    <div class="card"><div class="card-body">
        <div class="row mb-3"><div class="col-md-3"><strong>ID</strong></div><div class="col-md-9">@Model.Id</div></div>
        <div class="row mb-3"><div class="col-md-3"><strong>Title</strong></div><div class="col-md-9" id="titleCell"></div></div>
        <div class="row mb-3"><div class="col-md-3"><strong>Description</strong></div><div class="col-md-9" id="descCell"></div></div>
    </div></div>
    <div id="alert" class="alert mt-3" style="display:none"></div>
</div>

@section Scripts {
    <script>
        const apiBaseUrl = '@Configuration["ApiSettings:BaseUrl"]';
        const id = '@Model.Id';
        async function load(){ try{ const res=await fetch(`${apiBaseUrl}/api/Rubric/${id}`); if(!res.ok) throw new Error('Failed'); const d=await res.json(); document.getElementById('titleCell').textContent=d.title||''; document.getElementById('descCell').textContent=d.description||''; }catch(err){ showAlert(err.message||'Error','danger'); } }
        function showAlert(m,t){ const a=document.getElementById('alert'); a.className=`alert alert-${t} mt-3`; a.textContent=m; a.style.display='block'; setTimeout(()=>a.style.display='none',4000); }
        document.addEventListener('DOMContentLoaded', load);
    </script>
}
