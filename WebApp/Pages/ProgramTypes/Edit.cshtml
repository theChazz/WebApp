@page "{id:int}"
@model WebApp.Pages.ProgramTypes.EditModel
@{
    ViewData["Title"] = "Edit Program Type";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4><i class="fas fa-edit"></i> Edit Program Type</h4>
                </div>
                <div class="card-body">
                    <form id="editProgramTypeForm">
                        <div class="mb-3">
                            <label class="form-label">Name</label>
                            <input id="Name" class="form-control" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea id="Description" class="form-control"></textarea>
                        </div>
                        <button class="btn btn-primary">Save</button>
                        <a href="/ProgramTypes/Index" class="btn btn-secondary ms-2">Cancel</a>
                    </form>
                    <div id="alert" class="alert mt-3" style="display: none;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const apiBaseUrl = '@Configuration["ApiSettings:BaseUrl"]';
        const programTypeId = '@Model.Id';

        async function loadProgramType() {
            try {
                const res = await fetch(`${apiBaseUrl}/api/ProgramType/${programTypeId}`);
                if (!res.ok) throw new Error('Failed to load');
                const data = await res.json();
                document.getElementById('Name').value = data.name || '';
                document.getElementById('Description').value = data.description || '';
            } catch (err) {
                showAlert(err.message || 'Error', 'danger');
            }
        }

        document.getElementById('editProgramTypeForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const payload = {
                id: parseInt(programTypeId, 10),
                name: document.getElementById('Name').value.trim(),
                description: document.getElementById('Description').value.trim()
            };

            try {
                const res = await fetch(`${apiBaseUrl}/api/ProgramType/${programTypeId}`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
                if (!res.ok) throw new Error('Failed to save');
                showAlert('Saved successfully', 'success');
                setTimeout(() => window.location.href = '/ProgramTypes/Index', 800);
            } catch (err) {
                showAlert(err.message || 'Error saving', 'danger');
            }
        });

        function showAlert(message, type) {
            const alert = document.getElementById('alert');
            alert.className = `alert alert-${type} mt-3`;
            alert.textContent = message;
            alert.style.display = 'block';
            setTimeout(() => alert.style.display = 'none', 4000);
        }

        document.addEventListener('DOMContentLoaded', loadProgramType);
    </script>
}
