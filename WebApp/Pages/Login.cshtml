@page
@model WebApp.Pages.LoginModel
@{
    ViewData["Title"] = "Login";
    Layout = "_AuthLayout";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3 class="text-center">Login</h3>
                </div>
                <div class="card-body">
                    <form id="loginForm">
                        <div class="form-group mb-3">
                            <label for="email">Email</label>
                            <input type="email" class="form-control" id="email" required>
                        </div>
                        <div class="form-group mb-3">
                            <label for="password">Password</label>
                            <input type="password" class="form-control" id="password" required>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-sign-in-alt"></i> Login
                            </button>
                        </div>
                        <div class="text-center mt-3">
                            <p>Don't have an account? <a href="/Register">Register here</a></p>
                        </div>
                    </form>
                    <div id="alert" class="alert mt-3" style="display: none;"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const apiBaseUrl = '@Configuration["ApiSettings:BaseUrl"]';
        
        document.getElementById('loginForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const email = document.getElementById('email').value;
            const password = document.getElementById('password').value;
            const alert = document.getElementById('alert');

            try {
                const response = await fetch(`${apiBaseUrl}/api/User/login`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, password })
                });

                const data = await response.json();

                if (!response.ok) {
                    throw new Error(data.message || 'Login failed');
                }

                // Store user data and token separately
                localStorage.setItem('user', JSON.stringify({
                    id: data.user.id,
                    email: data.user.email,
                    fullName: data.user.fullName,
                    role: data.user.role.toLowerCase()
                }));
                localStorage.setItem('token', data.token);

                // Show success message
                alert.className = 'alert alert-success mt-3';
                alert.textContent = 'Login successful! Redirecting...';
                alert.style.display = 'block';

                // Redirect based on role
                setTimeout(() => {
                    if (data.user.role.toLowerCase() === 'admin') {
                        window.location.href = '/Admin/Index';
                    } else {
                        window.location.href = '/Courses/Index';
                    }
                }, 1000);
            } catch (error) {
                console.error('Login error:', error);
                alert.className = 'alert alert-danger mt-3';
                alert.textContent = error.message || 'An error occurred during login';
                alert.style.display = 'block';
            }
        });
    </script>
} 