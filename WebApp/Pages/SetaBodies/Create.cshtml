@page
@model WebApp.Pages.SetaBodies.CreateModel
@{
    ViewData["Title"] = "Create SETA Body";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="mb-0"><i class="fas fa-plus"></i> Create SETA Body</h4>
                    <a href="/SetaBodies/Index" class="btn btn-secondary btn-sm"><i class="fas fa-arrow-left"></i> Back</a>
                </div>
                <div class="card-body">
                    <form id="form">
                        <div class="mb-3">
                            <label class="form-label">Code</label>
                            <input id="Code" class="form-control" maxlength="10" required />
                            <div class="form-text">Short unique code (e.g., MICT, BANKSETA)</div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Name</label>
                            <input id="Name" class="form-control" required />
                        </div>
                        <div class="d-flex gap-2">
                            <button class="btn btn-primary" type="submit"><i class="fas fa-save"></i> Create</button>
                            <a href="/SetaBodies/Index" class="btn btn-outline-secondary">Cancel</a>
                        </div>
                    </form>
                    <div id="alert" class="alert mt-3" style="display:none"></div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const apiBaseUrl = '@Configuration["ApiSettings:BaseUrl"]';
        document.getElementById('form').addEventListener('submit', async (e) => {
            e.preventDefault();
            const payload = {
                code: document.getElementById('Code').value.trim(),
                name: document.getElementById('Name').value.trim()
            };
            try {
                const res = await fetch(`${apiBaseUrl}/api/SetaBody`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });
                if (!res.ok) {
                    let msg = 'Failed to create SETA body';
                    try { const e = await res.json(); msg = e.message || e.title || msg; } catch {}
                    throw new Error(msg);
                }
                showAlert('SETA body created successfully', 'success');
                setTimeout(() => window.location.href = '/SetaBodies/Index', 700);
            } catch (err) {
                showAlert(err.message || 'Error creating SETA body', 'danger');
            }
        });
        function showAlert(m, t) {
            const a = document.getElementById('alert');
            a.className = `alert alert-${t} mt-3`;
            a.textContent = m;
            a.style.display = 'block';
            if (t === 'success' || t === 'info') setTimeout(() => a.style.display = 'none', 5000);
        }
    </script>
}
